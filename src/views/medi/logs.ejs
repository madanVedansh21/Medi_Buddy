<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MediBuddy - Symptom Logger</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
  </head>
  <body style="background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%); min-height: 100vh;">
    <%- include('../partials/dashboard-header') %>

    <main class="container py-5">
      <div class="row mb-4">
        <div class="col-12">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
              <h1 style="color: #f8fafc; font-weight: 700; font-size: 2.5rem; margin: 0;">
                <i class="fas fa-notes-medical me-3" style="color: #10b981"></i> Symptom Logger
              </h1>
              <p style="color: #94a3b8; font-size: 1.1rem; margin: 0">Track your symptoms and generate health reports</p>
            </div>
            <div>
              <a href="/dashboard" class="btn me-2" style="background: linear-gradient(135deg, #64748b 0%, #475569 100%); border: none; color: white; padding: 10px 20px; border-radius: 8px; text-decoration: none;">
                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
              </a>
            </div>
          </div>
        </div>
      </div>

      <div class="row mb-4">
        <div class="col-12">
          <div class="card" style="background: linear-gradient(135deg, #1e293b 0%, #334155 100%); border: 1px solid rgba(16, 185, 129, 0.3); border-radius: 15px;">
            <div class="card-header" style="background: rgba(16, 185, 129, 0.1); border-bottom: 1px solid rgba(16, 185, 129, 0.3);">
              <h3 style="color: #f8fafc; margin: 0; font-weight: 600">
                <i class="fas fa-plus-circle me-2"></i> Log New Symptoms
              </h3>
            </div>
            <div class="card-body p-4">
              <form id="symptomForm" action="/logsdata" method="POST">
                <div class="mb-3">
                  <label for="symptomText" class="form-label" style="color: #f8fafc; font-weight: 600">Describe your symptoms:</label>
                  <textarea class="form-control" id="symptomText" rows="4" placeholder="Describe how you're feeling today..." style="background: rgba(15, 23, 42, 0.5); border: 1px solid rgba(16, 185, 129, 0.3); color: #f8fafc; border-radius: 8px;" required></textarea>
                </div>
                <div class="row mb-3">
                  <div class="col-md-6">
                    <label for="severityLevel" class="form-label" style="color: #f8fafc; font-weight: 600">Severity Level:</label>
                    <select class="form-select" id="severityLevel" style="background: rgba(15, 23, 42, 0.5); border: 1px solid rgba(16, 185, 129, 0.3); color: #f8fafc; border-radius: 8px;">
                      <option value="mild">Mild</option>
                      <option value="moderate">Moderate</option>
                      <option value="severe">Severe</option>
                    </select>
                  </div>
                  <div class="col-md-6">
                    <label for="symptomCategory" class="form-label" style="color: #f8fafc; font-weight: 600">Category:</label>
                    <select class="form-select" id="symptomCategory" style="background: rgba(15, 23, 42, 0.5); border: 1px solid rgba(16, 185, 129, 0.3); color: #f8fafc; border-radius: 8px;">
                      <option value="general">General</option>
                      <option value="pain">Pain</option>
                      <option value="digestive">Digestive</option>
                      <option value="respiratory">Respiratory</option>
                      <option value="mental">Mental Health</option>
                      <option value="other">Other</option>
                    </select>
                  </div>
                </div>
                <button type="submit" class="btn w-100" style="background: linear-gradient(135deg, #10b981 0%, #059669 100%); border: none; color: white; padding: 12px 24px; border-radius: 8px; font-weight: 600;">
                  <i class="fas fa-save me-2"></i> Log Symptoms
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-12">
          <div class="card" style="background: linear-gradient(135deg, #1e293b 0%, #334155 100%); border: 1px solid rgba(16, 185, 129, 0.3); border-radius: 15px;">
            <div class="card-header" style="background: rgba(16, 185, 129, 0.1); border-bottom: 1px solid rgba(16, 185, 129, 0.3);">
              <h3 style="color: #f8fafc; margin: 0; font-weight: 600">
                <i class="fas fa-history me-2"></i> Symptom History
              </h3>
            </div>
            <div class="card-body p-0" id="symptomHistory"></div>
          </div>
        </div>
      </div>
    </main>

    <div id="user-data" data-user='<%- JSON.stringify(user || {}).replace(/'/g, '&#39;') %>' style="display: none"></div>
    <script>
      const stringeduser = JSON.parse(document.getElementById("user-data").dataset.user);

      document.getElementById("symptomForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const symptomText = document.getElementById("symptomText").value;
        const severity = document.getElementById("severityLevel").value;
        const category = document.getElementById("symptomCategory").value;
        if (symptomText.trim()) {
          saveLogToServer(symptomText, severity, category);
          setTimeout(() => window.location.reload(), 500);
          document.getElementById("symptomForm").reset();
          showNotification("‚úÖ Symptom logged successfully!", "success");
        }
      });

      async function saveLogToServer(text, severity, category) {
        try {
          const res = await fetch('/logsdata', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ symptomText: text, severity, category })
          });
          const data = await res.json();
          if (!res.ok) throw new Error(data.message || 'Request failed');
          console.log('Saved on server, updated logs:', data.logs);
        } catch (err) {
          console.error('Failed to save log on server:', err);
          showNotification("‚ö†Ô∏è Failed to save symptom on server", "warning");
        }
      }

      function addSymptomEntry(text, severity, category, timestamp = null, logId = null) {
        const now = timestamp ? new Date(timestamp) : new Date();
        const timeString = now.toLocaleString("en-US", { weekday: "long", hour: "numeric", minute: "2-digit", hour12: true });

        const severityColors = { mild: "#10b981", moderate: "#f59e0b", severe: "#ef4444" };
        const categoryColors = { general: "#64748b", pain: "#3b82f6", digestive: "#8b5cf6", respiratory: "#f97316", mental: "#06b6d4", other: "#6366f1" };

        const newEntry = document.createElement("div");
        newEntry.className = "symptom-entry p-4 border-bottom d-flex justify-content-between";
        newEntry.style.borderColor = "rgba(16, 185, 129, 0.2)";
        newEntry.setAttribute("data-log-id", logId);

        newEntry.innerHTML = `
          <div>
            <div class="d-flex justify-content-between align-items-start mb-2">
              <div class="d-flex align-items-center">
                  <span class="badge me-2" style="background: ${severityColors[severity]}; color: white; padding: 5px 10px; border-radius: 15px;">${severity.charAt(0).toUpperCase() + severity.slice(1)}</span>
                  <span class="badge" style="background: ${categoryColors[category]}; color: white; padding: 5px 10px; border-radius: 15px;">${category.charAt(0).toUpperCase() + category.slice(1)}</span>
              </div>
              <small style="color: #64748b;"><i class="fas fa-clock me-1"></i>${timeString}</small>
            </div>
            <p style="color: #f8fafc; margin: 0; line-height: 1.6;">${text}</p>
          </div>
          <button class="btn btn-danger btn-sm delete-log-btn" style="height: fit-content;">Delete</button>`;

        const historyContainer = document.getElementById("symptomHistory");
        historyContainer.insertBefore(newEntry, historyContainer.firstChild);

        newEntry.querySelector(".delete-log-btn").addEventListener("click", function () {
          if (confirm("Are you sure you want to delete this symptom log?")) {
            deleteLogFromServer(logId, newEntry);
          }
        });
      }

      async function deleteLogFromServer(logId, entryElement) {
        try {
          const res = await fetch(`/logsdata/${logId}`, {
            method: "DELETE"
          });
          const data = await res.json();
          if (!res.ok) throw new Error(data.message || "Delete failed");
          entryElement.remove();
          showNotification("üóëÔ∏è Log deleted!", "success");
        } catch (err) {
          console.error("Error deleting log:", err);
          showNotification("‚ùå Failed to delete log", "error");
        }
      }

      window.addEventListener("DOMContentLoaded", function () {
        if (stringeduser.logs && Array.isArray(stringeduser.logs)) {
          stringeduser.logs.forEach((log) => {
            addSymptomEntry(log.message, log.severity, log.category, log.timestamp, log._id);
          });
        }
      });

      function showNotification(message, type) {
        const notification = document.createElement("div");
        notification.className = `alert position-fixed`;
        notification.style.cssText = `top: 20px; right: 20px; z-index: 1050; background: ${type === "success" ? "#10b981" : type === "info" ? "#3b82f6" : "#f59e0b"}; color: white; border: none; border-radius: 8px; box-shadow: 0 10px 25px rgba(0,0,0,0.3); padding: 15px 20px; min-width: 300px;`;
        notification.textContent = message;
        document.body.appendChild(notification);
        setTimeout(() => notification.remove(), 3000);
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
